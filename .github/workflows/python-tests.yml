name: Python Checks
on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize
  push:
    branches:
      - master

env:
  # renovate: datasource=github-releases depName=uv packageName=astral-sh/uv
  UV_VERSION: "0.7.12"

jobs:
  ruff:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      # Get repo, python, and uv
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{env.UV_VERSION}}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: uv install dependencies
        run: uv sync --group dev

      - name: Linter
        # Update output format to enable automatic inline annotations.
        run: uv run ruff check --output-format=github src/ tests/

      - name: Formatter
        run: uv run ruff format --diff src/ tests/

  mypy:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      # Get repo, python, and uv
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{env.UV_VERSION}}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: uv install dependencies
        run: uv sync --group dev

      - name: Run mypy
        run: uv run mypy src/ tests/

  pytest:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      # Get repo, python, and uv
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{env.UV_VERSION}}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: uv install dependencies
        run: uv sync --group dev --group ci

      # Run python tests
      - name: Run pytest
        uses: pavelzw/pytest-action@v2.2.0
        with:
          custom-pytest: uv run pytest
          custom-arguments: -r a
          report-title: Pytest Report
          click-to-expand: true
          verbose: true
          emoji: true
        env:
          IPGET_TEST_HEALTHCHECK_SERVER: ${{secrets.PYTEST_IPGET_HEALTHCHECK_SERVER}}
          IPGET_TEST_HEALTHCHECK_UUID: ${{secrets.PYTEST_IPGET_HEALTHCHECK_UUID}}
          IPGET_TEST_DISCORD_WEBHOOK: ${{secrets.PYTEST_IPGET_DISCORD_WEBHOOK}}
